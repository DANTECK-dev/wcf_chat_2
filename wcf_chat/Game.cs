using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace wcf_chat
{
    /* Напишите простую игру с использованием классов:  
     * В игре участвуют 4 игрока (человека / компьютера).
     * Игроки делают ставки с помощью карточек с разными значениями, 
     * которые у них есть, в течение восьми раундов. 
     * В каждом раунде победившие игроки получают по 1 победному очку. 
     * В конце игры, те, кто накопили больше победных очков, 
     * побеждают в игре (возможно несколько победителей). 
     * Сперва рассмотрим правила игры: 
     * У каждого игрока есть набор из 10 карточек со значениями от 1 до 10 (можно представить списком или массивом): 1 2 3 4 5 6 7 8 9 10 8 
     * В начале игры у каждого игрока убирается случайная карточка, то есть остается только 9. 
     * При этом игроки не знают, какой карточки нет у их соперников. Эта информация скрыта. 
     * Правила игры просты:  Игра проходит 8 раундов. 
     * В каждом раунде игроки должны выбрать одну из своих карточек и сделать ей ставку. 
     * Другие игроки не знают, какую ставку сделали остальные. 
     * Далее все карточки одновременно открываются. 
     * В раунде побеждает тот, у кого самое большое значение на карточке, 
     * при этом больше 0. Но перед этим необходимо последовательно выполнить следующие действия: 
     * 1) Если кто-либо из игроков сыграл 10-ку, а кто-то единицу, то все 10-ки превращаются в 0. Единицы при этом превращаются в 10-ки. 
     * 2) Все повторяющиеся значения игроков превращаются в 0. К примеру, если два игрока сыграли 7, то обе 7-ки превращаются в 0.
     * Исключение: те, кто выбрал, 2-ки, их значения не превращаются в 0. Это особенность 2-ки. Среди тех, у кого значения, больше 0, 
     * определяется победитель с наибольшим значением. Может быть несколько победителей, если победили игроки с 2-ками. 
     * Победители получают по 1 победному очку. В последнем (8-ом раунде) за победу дается 2 очка. В раунде может не быть победителя, 
     * если у всех значения превратились в 0. Сыгранные карточки удаляются из наборов игроков. 
     * Так проходят 8 раундов. По истечении этого подводится итог, и определяется победитель с наибольшим количеством очков.
     * Может быть несколько победителей. 
     * Пример раунда: Допустим игроки выбрали такие карточки: 1 1 5 10 Игрок 1 Игрок 2 Игрок 3 Игрок 4
     * Тогда после всех преобразований, окажется, что побеждает игрок 3. 
     * Теперь рассмотрим требования к программе: Необходимо создать как минимум 2 класса:  Класс игры  Класс игрока 
     * Класс игры должен содержать в себе объекты игроков (4 игрока). 
     * При этом при его создании нужно определять, сколько игроков будут виртуальными (компьютерами).
     * Можно устроить игру только с компьютерами, чтобы они играли между собой. 
     * Класс игрока должен содержать данные о его наборе карточек.
     * При инициализации каждого игрока нужно выбирать, кем он будет: человек или компьютер. 
     */
    internal class Game
    {
        public int round { get; set; }
        public bool isGameStarted { get; set; }
        public int selected { get; set; }

        public Game()
        {
            round = 1;
            isGameStarted = false;
            selected = 4;
        }
        public void SelectedIncriment() => selected++;
        public void SelectedDicriment() => selected--;
        public void RoundIncriment() => round++;
        

        public string WhoWin(ServerUser users)
        {


            return string.Empty;
        }
    }
}
